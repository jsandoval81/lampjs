module.exports = function (grunt) {
    require('jit-grunt')(grunt);

    grunt.initConfig({
        //==========
        //= CONFIG =
        //==========
        // CSS directory config
        cssLessDir:   '../css/less',
        cssDistDir:   '../css/dist',
        // JS directory config
        jsLibsDir:    'src/vendor',
        jsCustomDir:  'src/app',
        jsDistDir:    'dist',
        // Project/compiled name
        compiledName: 'app',

        //========================
        //= LESS-to-CSS compiler =
        //========================
        //
        less: {
            development: {
                options: {
                    //compress: true,
                    //yuicompress: true,
                    //optimization: 2,
                    banner: '/*!\n' +
                            'This file is auto-generated by the LESS pre-compiler.\n' +
                            '*/' +
                            '\n'
                },
                files: {
                    '<%= cssDistDir %>/<%= compiledName %>.css': '<%= cssLessDir %>/main.less'
                },
                options: {
                    plugins: [ require('less-plugin-glob') ]
                }
            }
        },

        //====================
        //= CSS minification =
        //====================
        cssmin: {
            options: {
                keepSpecialComments: false,
                sourceMap: true,
                report: 'gzip'
            },
            target: {
                files: {
                    '<%= cssDistDir %>/<%= compiledName %>.min.css': '<%= cssDistDir %>/<%= compiledName %>.css'
                }
            }
        },

        //==================
        //= JS file concat =
        //==================
        concat: {
            options: {
                stripBanners: true,
            },
            // Vendor Libs
            libs: {
                src: [
                        '<%= jsLibsDir %>/jquery.js',
                        '<%= jsLibsDir %>/jquery-extensions.js',
                        '<%= jsLibsDir %>/jquery.validate.js',
                        '<%= jsLibsDir %>/handlebars.runtime.js',
                        '<%= jsLibsDir %>/urlSplit.js',
                        '<%= jsLibsDir %>/fastclick.js',
                        '<%= jsLibsDir %>/moment.min.js',
                        //'<%= jsLibsDir %>/numeral.min.js',
                        //'<%= jsLibsDir %>/scrollTo.min.js'
                    ],
                dest: '<%= jsDistDir %>/vendor.js'
            },
            // Custom JS
            custom: {
                src: [
                        // Build order
                        '<%= jsCustomDir %>/app.js', // Keep first
                        '<%= jsCustomDir %>/utils/prototype-extensions.js',
                        '<%= jsCustomDir %>/utils/app-utils.js',
                        '<%= jsCustomDir %>/utils/data-utils.js',
                        '<%= jsCustomDir %>/utils/server-ops.js',
                        '<%= jsCustomDir %>/framework/sync-router.js',
                        '<%= jsCustomDir %>/router.js',
                        '<%= jsCustomDir %>/framework/view-class.js',
                        '<%= jsCustomDir %>/views/**/*.js',

                        '<%= jsCustomDir %>/framework/page-init.js' // Keep last
                    ],
                dest: '<%= jsDistDir %>/custom.js'
            },
            // Vendor + Custom + Templates
            dist: {
                src: ['<%= jsDistDir %>/vendor.js', '<%= jsDistDir %>/custom.js', '<%= jsDistDir %>/templates.js'],
                dest: '<%= jsDistDir %>/<%= compiledName %>.js'
            }
        },

        //=============
        //= JS Linter =
        //=============
        jshint: {
            // Src files
            beforeconcat: {
                options: {
                    jshintrc: '.jshintrc-before-concat'
                },
                src: ['<%= jsCustomDir %>/**/*.js']
            },
            // Combined Src file
            afterconcat: {
                options: {
                    jshintrc: '.jshintrc'
                },
                src: ['<%= jsDistDir %>/custom.js']
            }
        },

        //=============================
        //= Handlebars-to-JS Compiler =
        //=============================
        handlebars: {
            compile: {
                options: {
                    // Set the template object on the app
                    namespace: 'app.Templates',
                    // Set each template name as the filename (without extension)
                    processName: function (filePath) {
                        var file = filePath.split('/').pop();

                        return file.replace(/\.hbs$/, '');
                    }
                },
                files: {
                    '<%= jsDistDir %>/templates.js': ['<%= jsCustomDir %>/**/*.hbs']
                }
            }
        },

        //===================
        //= JS Minification =
        //===================
        uglify: {
            options: {
                sourceMap: true
            },
            // Libs + Custom
            dist: {
                files: {
                    '<%= jsDistDir %>/<%= compiledName %>.min.js': ['<%= jsDistDir %>/<%= compiledName %>.js']
                }
            }
        },

        //====================
        //= Dev File Watcher =
        //====================
        watch: {
            // Watch LESS files and procompile
            precompile: {
                files: ['<%= cssLessDir %>/**/*.less'],
                tasks: ['less']
            },
            // Watch compiled CSS and minify
            minify: {
                files: ['<%= cssDistDir %>/<%= compiledName %>.css'],
                tasks: ['cssmin']
            },
            // Watch JS library files and concat
            concatLibs: {
                files: ['<%= jsLibsDir %>/**/*.js'],
                tasks: ['concat:libs']
            },
            // Watch JS custom files and concat
            concatCustom: {
                files: ['<%= jsCustomDir %>/**/*.js'],
                tasks: ['jshint:beforeconcat', 'concat:custom']
            },
            // Compile Handlebars templates into JS
            processTemplates: {
                files: ['<%= jsCustomDir %>/**/*.hbs'],
                tasks: ['handlebars']
            },
            // Watch combined JS files and concat into a dist
            concatDist: {
                files: ['<%= jsDistDir %>/vendor.js', '<%= jsDistDir %>/custom.js', '<%= jsDistDir %>/templates.js'],
                tasks: ['jshint:afterconcat', 'concat:dist']
            },
            // Minify dist JS
            uglify: {
                files: ['<%= jsDistDir %>/<%= compiledName %>.js'],
                tasks: ['uglify:dist']
            },
            // Livereload the browser on appropriate file changes
            livereload: {
                options: { livereload: true },
                files: [
                    '<%= cssDistDir %>/<%= compiledName %>.min.css',
                    '<%= jsDistDir %>/<%= compiledName %>.min.js',
                    //'../**/*.php'
                ],
            }
        }
    });

    //===================
    //= Task Definition =
    //===================
    grunt.registerTask('default', ['less', 'cssmin', 'concat:libs', 'jshint:beforeconcat', 'handlebars', 'concat:custom', 'jshint:afterconcat', 'concat:dist', 'uglify', 'watch']);
    grunt.registerTask('build', ['less', 'cssmin', 'concat:libs', 'jshint:beforeconcat', 'handlebars', 'concat:custom', 'jshint:afterconcat', 'concat:dist', 'uglify']);
};
